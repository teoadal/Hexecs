namespace Hexecs.Actors;

/// <summary>
/// Интерфейс для фильтрации актёров на основе заданных критериев.
/// Фильтр актёров предоставляет возможность получать и отслеживать подмножество актёров,
/// удовлетворяющих определенным условиям (ограничениям).
/// Позволяет эффективно работать с группами актёров, не перебирая всю коллекцию,
/// а также получать уведомления при добавлении, удалении или очистке актёров в фильтре.
/// </summary>
public interface IActorFilter
{
    /// <summary>
    /// Событие, вызываемое при добавлении актёра в фильтр.
    /// Параметр содержит идентификатор добавленного актёра.
    /// </summary>
    event Action<uint>? Added;

    /// <summary>
    /// Событие, вызываемое при очистке всего фильтра.
    /// Происходит, когда все актёры удаляются из фильтра одновременно.
    /// </summary>
    event Action? Cleared;

    /// <summary>
    /// Событие, вызываемое при удалении актёра из фильтра.
    /// Параметр содержит идентификатор удаленного актёра.
    /// </summary>
    event Action<uint>? Removed;

    /// <summary>
    /// Ограничение, определяющее критерии фильтрации актёров.
    /// Может быть null, если фильтр не использует ограничения.
    /// </summary>
    ActorConstraint? Constraint { get; }

    /// <summary>
    /// Контекст актёров, к которому привязан фильтр.
    /// Содержит все актёры и их компоненты, из которых фильтр выбирает подмножество.
    /// </summary>
    ActorContext Context { get; }

    /// <summary>
    /// Количество актёров, удовлетворяющих условиям фильтра.
    /// </summary>
    int Length { get; }

    /// <summary>
    /// Проверяет, содержится ли актёр с указанным числовым идентификатором в фильтре.
    /// </summary>
    /// <param name="actorId">Числовой идентификатор актёра.</param>
    /// <returns>Возвращает true, если актёр удовлетворяет условиям фильтра; иначе false.</returns>
    bool Contains(uint actorId);

    /// <summary>
    /// Проверяет, содержится ли актёр с указанным структурным идентификатором в фильтре.
    /// </summary>
    /// <param name="actorId">Структурный идентификатор актёра.</param>
    /// <returns>Возвращает true, если актёр удовлетворяет условиям фильтра; иначе false.</returns>
    bool Contains(in ActorId actorId);

    /// <summary>
    /// Проверяет, содержится ли указанный актёр в фильтре.
    /// </summary>
    /// <param name="actor">Экземпляр актёра для проверки.</param>
    /// <returns>Возвращает true, если актёр удовлетворяет условиям фильтра; иначе false.</returns>
    bool Contains(in Actor actor);
}